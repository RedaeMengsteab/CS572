"1.Explain why do we want sometimes to use setImmediate instead of using setTimeout"
 
setTimeout is simply like calling the function after delay has finished.
Whenever a function is called it is not executed immediately,"
but queued so that it is executed after all the executing and currently queued eventhandlers finish first.
Also setTimeout will be slow because it will check the timer at least once before executing. At times it can be twice as slow.

setImmediate is similar in this regard except that it doesn’t use queue of functions."
It checks queue of I/O eventhandlers. If all I/O events in the current snapshot are processed,"
it executes the callback. It queues them immedieately after the last I/O handler somewhat like process.nextTick. So it is faster.


"2.Explain the difference between process.nexrTick and setImmediate?"

nextTickQueue will be processed after the current operation completes,
 regardless of the current phase of the event loop.
It means, this queue will be executed whenever the boundary between JavaScript and C/C++ is crossed.
 So it’s not like it will be called after the task in the current phase only.
  Neither it means after the execution of the current callback. It is sometime before the next phase is hit.




3."Name 10 core modules that Nodes provide by default"

1. http        2.express         3. assert
4. events      5.fs              6.stream
7. vm         8.timers          9. path
10. util      11.os